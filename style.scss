---
---

$open-sans: 'Open Sans', sans-serif;
$source-sans: "Source Sans Pro", "Helvetica Neue", Helvetica, Arial, sans-serif;

 $darkBlue: rgb(0, 0, 128);
 $darkBlueTransparent: rgba(0, 0, 128, 0.8);
 $greyText: #999;
 $hoverText: #555;
 $submitColor: rgb(0, 0, 128);
 $submitColorHover: #005;

 $darkGrey: #111;
 $lightGrey: #eee;
 $outlineColor: #ddd;

$button-width: 50px;                    // == $header-mobile-height The width of the button area 
$button-height: 50px;                   // == $header-mobile-height The height of the button area
$bar-thickness: 2px;                    // The thickness of the button bars
$button-pad: 10px;                      // The left/right padding between button area and bars.
$button-bar-space: 8px;                // The spacing between button bars
$button-transistion-duration: 0.2s;     // The transition duration
$carousel-duration: 0.4s;     // The transition duration
$hamburgerColor: transparent;
$hamburgerBarColor: rgb(0, 0, 128);

$sidebar-width: 220px;
$header-mobile-height: 50px;
$header-mobile-padding: 20px;

* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-overflow-scrolling: touch;
}

a {
    color: $greyText;
    &:hover {
        color: $hoverText;
    }
}

p.clear {
    clear: both;
}

#logo {
    z-index: 10;
    position: relative;
    max-width: 150px;
    float: left;
    pointer-events: initial;
    max-height: $header-mobile-height;
    
    @media (min-width: 768px) {
        max-width: 100%;
        max-height: initial;
    }
}

#nav {
    // position: relative;
    z-index: 10;
    // background-color: $lightGrey;
    height: 100%;
    transition: opacity $button-transistion-duration ease-in-out;
    &.mobile-hidden {
        opacity: 0;
        pointer-events: none;
    }
    @media (min-width: 768px) {
        &.mobile-hidden {
            opacity: 1;
            pointer-events: initial;
        }
    }
}

#menu-button {
    position: relative;
    z-index: 10;
    float: right;
    pointer-events: initial;
    @media (min-width: 768px) {
        display: none;
    }
}

.slideshow-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    // height: 100%;
    opacity: 0;
    pointer-events: none;
    transition: opacity $button-transistion-duration ease-in-out;

    top: $header-mobile-height + $header-mobile-padding;

    &.active {
        opacity: 1;
        pointer-events: initial;
    }

    // .skidder-clickwrapper {
    //     display: none;
    // }

    .skidder-viewport {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        height: inherit !important;
        
        .skidder-wrapper {
            height: inherit !important;
            top: 0;
            bottom: 0;
        }

        .skidder-pager {
            display: none;
        }
    }

    @media (min-width: 768px) {
        left: $sidebar-width; 
        top: 0;
    }
}
.slideshow {
    height: inherit !important;
}
.slide {
    display: inline-block;
    width: auto;
    height: 100%;
    max-width: 90vw;
    transform: translate3d(0, 0, 0);
    box-shadow: none !important;
    perspective: 200px;

    @media (min-width : 768px) {
        max-width: 75vw;
    }
    

    img {
        filter: blur(3px) brightness(0.9);
        // transition: filter 400ms ease-in-out;
        // transform: translate3d(0, 0, 0);


        max-width: 100%;
        max-height: 100%;

        position: relative;
        top: 50%;
        perspective: 200px;
        transform: translateY(-50%) translate3d(0, 0, 0) translateZ(-20px);
        transition: transform $carousel-duration ease-in-out, filter $carousel-duration ease-in-out;
        padding: 20px 0;
        // padding-top: $header-mobile-height + $header-mobile-padding;

        @media (min-width : 768px) {
            padding: 50px 25px;
        }

    }

    &.active {
        img {
            filter: none;
            transform: translateY(-50%) translate3d(0, 0, 0);
        }
    }
}

#contact {
    text-align: center;
    top: 50%;
    padding-left: 20px;
    padding-right: 20px;

    input, textarea {
        width: 100%;
        height: 3em;
        margin-bottom: 1em;
        padding: 0.5em;
        font-size: 14px;
        border: 1px solid $outlineColor;

        &:disabled {
            background-color: $lightGrey;
        }
    }

    textarea {
        height: 126px;
    }

    form {
        max-width: 700px;
        margin: auto;
        position: relative;
        transform: translateY(-50%);
    }

    #submit {
        float: right;
        color: $greyText;

        &:hover {
            color: $darkBlue;
        }

        &.disabled {
            text-shadow: none;
            color: $greyText;
            pointer-events: none;
        }
    }
    
}

.profile {
    border-right: 1px solid $lightGrey;
    padding: 2%;
    height: 100%;
    background-color: $lightGrey;
    transition: background-color $button-transistion-duration ease-in-out;
    position: relative;
    z-index: 10;

    &.mobile-hidden {
        background-color: transparent;
        pointer-events: none;

        @media (min-width: 768px) {
            pointer-events: initial;
        }
    }

    h3 {
        height: auto;

        margin: 0;
        color: $darkGrey;
        width: 100%;
        text-align: center;
    }
    p {
        height: auto;
        width: 100%;
        text-align: center;
        color: $darkGrey;
    }

    .contact {
        position: absolute;
        bottom: 10px;
        margin-left: 0;
        left: 0;
        right: 0;
        text-align: center;

        width: 100%;

        a {
            padding: 0;
            margin-left: 0;
            margin-bottom: 20px;
        }
        #contact-button {
            position: relative;
            top: -10px;
        }

        .social .fa {
            padding-left: 8px;
            font-size: 1.4em;
            padding-right: 8px;
        }
    }

    @media (min-width: 768px) {
        position: fixed;
        width: $sidebar-width;
        height: 100%;
        padding: 0;
        h3 {
            text-align: center;
            float: none;
            width: 100%;
            margin-top: 0;
        }
        p {
            margin-top: -1.3em;
            font-size: 16px;
            text-align: center;
            letter-spacing: 2px;
        }
        .img-circle {
            height: auto;
            width: 55%;
            margin-top: 25%;
            margin-left: 24%;
        }

    }
}

.gallery-nav {
  margin: 0 auto 30px;
  text-align: center;
  display: table;
  border-spacing: 8px;
  
    li {
        float: none;
        display: table-row;
        
        padding: 5px 10px;

        >a {
            display: table-cell;
            // border: 1px solid #bbb;
            padding-left: 16px;
            padding-right: 16px;
        }
        &.current a {
            // border: 1px solid rgb(0,0,128);
            color: rgb(0,0,128);
        }
    }
    
}
// ::-webkit-scrollbar {
//     -webkit-appearance: none;
//     width: 7px;
//     height: 0;
// }
// ::-webkit-scrollbar-thumb {
//     border-radius: 4px;
//     background-color: rgba(0,0,0,.5);
//     -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
// }
.gallery-wrapper {
    // display: table;
    position: absolute;
    top: 0;
    left: 20%;
    height: 100%;
    width: auto;
    white-space: nowrap;
    overflow-y: hidden;
    overflow-x: scroll;
    transform: translate3d(0, 0, 0);
    
    // .gallery {
        
        // vertical-align: top;
        // display: table-row;
        .img-container {
            // display: table-cell;
            display: inline-block;
            width: 90%;
            height: 100%;
            transform: translate3d(0, 0, 0);

            img {
                max-width: 100%;
                max-height: 100%;

                position: relative;
                top: 50%;
                transform: translateY(-50%) translate3d(0, 0, 0);
            }
        }

        
    // }   
}



//OLD STYLES
.preload * {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -ms-transition: none !important;
  -o-transition: none !important;
  transition: none !important;
}

html,
body {
    margin: 0;
    padding: 0;
    position: relative;
    overflow: hidden;
    height: 100%;
}

html {
    font-family: $source-sans;
    font-size: 18px;
    font-weight: 300;
    line-height: 1.6;
    @media (min-width: 768px) {
        font-size: 20px;
    }
}

body {
    color: #515151;
    background-color: #FAFAFA;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
}

a {
    text-decoration: none;
    transition: all 0.3s;
}

h1 {
    font-size: 2rem;
}

h2 {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    vertical-align: baseline;
    font-weight: 800;
    font-size: 1.6rem;
}

h3 {
    font-size: 1.3rem;
}

h4,
h5,
h6 {
    font-size: 1rem;
}

p {
    margin: 0 0 1rem;
}

ul,
ol,
dl {
    // margin-left: 1.5rem;
}

dt {
    font-weight: bold;
}

dd {
    margin-bottom: .5rem;
}

ul {
    display: inline;
    list-style: inside circle;
    padding-left: 0;
    li {
        margin-bottom: .25rem;
    }
    ul,
    ol {
        margin-top: .25rem;
        margin-bottom: .5rem;
    }
}

ol {
    list-style: inside decimal;
    padding-left: 0;
    li {
        margin-bottom: .25rem;
    }
    ul,
    ol {
        margin-top: .25rem;
        margin-bottom: .5rem;
    }
}

p + h1,
p + h2,
p + h3,
ul + h1,
ul + h2,
ul + h3,
ol + h1,
ol + h2,
ol + h3 {
    margin-top: 1.5rem;
}

hr {
    border: 0;
    border-top: .5px solid #eee;
    border-bottom: .5px solid #eee;
    margin: 1.5rem auto;
}

strong {
    color: #333;
    font-weight: 600;
}

abbr {
    font-size: 85%;
    font-weight: bold;
    color: #555;
    text-transform: uppercase;
}

abbr[title] {
    cursor: help;
    border-bottom: 1px dotted #e5e5e5;
}

blockquote {
    padding: 0 0 0 1.5rem;
    margin: 0 2rem 1rem 0;
    color: #999;
    border-left: .5rem solid #e5e5e5;
    p:last-child {
        margin-bottom: 0;
    }
}

code,
pre {
    font-family: Menlo, Monaco, "Courier New", monospace;
}

code {
    padding: .25em .5em;
    font-size: 85%;
    color: #bf616a;
    background-color: #f9f9f9;
    border-radius: 3px;
}

pre {
    display: block;
    margin-top: 0;
    margin-bottom: 1rem;
    padding: 1rem;
    font-size: .8rem;
    line-height: 1.4;
    white-space: pre;
    white-space: pre-wrap;
    word-break: break-all;
    background-color: #f9f9f9;
}

pre code {
    padding: 0;
    font-size: 100%;
    color: inherit;
    background-color: transparent;
}

.highlight {
    margin-bottom: 1rem;
    border-radius: 4px;
}

.highlight pre {
    margin-bottom: 0;
}

.gist .gist-file {
    font-family: Menlo, Monaco, "Courier New", monospace !important;
}

.gist .markdown-body {
    padding: 15px;
}

.gist pre {
    padding: 0;
    background-color: transparent;
}

.gist .gist-file .gist-data {
    font-size: .8rem !important;
    line-height: 1.4;
}

.gist code {
    padding: 0;
    color: inherit;
    background-color: transparent;
    border-radius: 0;
}

img {
    display: block;
    max-width: 100%;
    // border-radius: 5px;
}

table {
    margin-bottom: 1rem;
    width: 100%;
    border: 1px solid #e5e5e5;
    border-collapse: collapse;
}

td,
th {
    padding: .25rem .25rem;
    border: 1px solid #e5e5e5;
}

tbody tr:nth-child(odd) td,
tbody tr:nth-child(odd) th {
    background-color: #eee;
}

.top {
    position: fixed;
    background: $darkBlueTransparent;
    height: 3px;
    width: 100%;
    top: 0;
    z-index: 100;
}

.pages {
    position: fixed;
    bottom: 1.5%;
    right: 2%;
    font-weight: 800;
    margin: 2vw;
    a {
        padding: 4px;
        padding-left: 9px;
        padding-right: 9px;
        text-align: center;
        border: 2px $darkBlueTransparent solid;
        color: $darkBlueTransparent;
        &:hover,
        &:focus {
            color: #fff;
            border-color: #fff;
            background: $darkBlueTransparent;
        }
    }
}



.posts {
    max-width: 38rem;
    padding: 1.4rem 0.8rem;
    margin-left: auto;
    margin-right: auto;
    overflow: auto;
    @media (min-width: 38rem) {
        margin-top: 0;
        margin-left: 20%;
        padding: 3%;
        min-width: 80%;
        height: 800px;
    }
}

.bloghead {
    .bloghead-title {
        span {
            color: #BDBDBD;
        }
    }
    .bloghead-nav {
        a {
            color: #000;
            font-weight: 800;
            &:hover {
                color: #424242;
            }
        }
        span {
            font-weight: 800;
            color: $darkBlueTransparent;
            &:hover,
            &:focus {
                color: $darkBlueTransparent;
                text-decoration: none;
            }
        }
    }
}

.post-list {
    h2 {
        margin-top: 1.3rem;
    }
}

.highlight .hll {
    background-color: #ffffcc
}

.highlight .c {
    color: #999988;
    font-style: italic
}


/* Comment */

.highlight .err {
    color: #a61717;
    background-color: #e3d2d2
}


/* Error */

.highlight .k {
    color: #000000;
    font-weight: bold
}


/* Keyword */

.highlight .o {
    color: #000000;
    font-weight: bold
}


/* Operator */

.highlight .cm {
    color: #999988;
    font-style: italic
}


/* Comment.Multiline */

.highlight .cp {
    color: #999999;
    font-weight: bold;
    font-style: italic
}


/* Comment.Preproc */

.highlight .c1 {
    color: #999988;
    font-style: italic
}


/* Comment.Single */

.highlight .cs {
    color: #999999;
    font-weight: bold;
    font-style: italic
}


/* Comment.Special */

.highlight .gd {
    color: #000000;
    background-color: #ffdddd
}


/* Generic.Deleted */

.highlight .ge {
    color: #000000;
    font-style: italic
}


/* Generic.Emph */

.highlight .gr {
    color: #aa0000
}


/* Generic.Error */

.highlight .gh {
    color: #999999
}


/* Generic.Heading */

.highlight .gi {
    color: #000000;
    background-color: #ddffdd
}


/* Generic.Inserted */

.highlight .go {
    color: #888888
}


/* Generic.Output */

.highlight .gp {
    color: #555555
}


/* Generic.Prompt */

.highlight .gs {
    font-weight: bold
}


/* Generic.Strong */

.highlight .gu {
    color: #aaaaaa
}


/* Generic.Subheading */

.highlight .gt {
    color: #aa0000
}


/* Generic.Traceback */

.highlight .kc {
    color: #000000;
    font-weight: bold
}


/* Keyword.Constant */

.highlight .kd {
    color: #000000;
    font-weight: bold
}


/* Keyword.Declaration */

.highlight .kn {
    color: #000000;
    font-weight: bold
}


/* Keyword.Namespace */

.highlight .kp {
    color: #000000;
    font-weight: bold
}


/* Keyword.Pseudo */

.highlight .kr {
    color: #000000;
    font-weight: bold
}


/* Keyword.Reserved */

.highlight .kt {
    color: #445588;
    font-weight: bold
}


/* Keyword.Type */

.highlight .m {
    color: #009999
}


/* Literal.Number */

.highlight .s {
    color: #d01040
}


/* Literal.String */

.highlight .na {
    color: #008080
}


/* Name.Attribute */

.highlight .nb {
    color: #0086B3
}


/* Name.Builtin */

.highlight .nc {
    color: #445588;
    font-weight: bold
}


/* Name.Class */

.highlight .no {
    color: #008080
}


/* Name.Constant */

.highlight .nd {
    color: #3c5d5d;
    font-weight: bold
}


/* Name.Decorator */

.highlight .ni {
    color: #800080
}


/* Name.Entity */

.highlight .ne {
    color: #990000;
    font-weight: bold
}


/* Name.Exception */

.highlight .nf {
    color: #990000;
    font-weight: bold
}


/* Name.Function */

.highlight .nl {
    color: #990000;
    font-weight: bold
}


/* Name.Label */

.highlight .nn {
    color: #555555
}


/* Name.Namespace */

.highlight .nt {
    color: #000080
}


/* Name.Tag */

.highlight .nv {
    color: #008080
}


/* Name.Variable */

.highlight .ow {
    color: #000000;
    font-weight: bold
}


/* Operator.Word */

.highlight .w {
    color: #bbbbbb
}


/* Text.Whitespace */

.highlight .mf {
    color: #009999
}


/* Literal.Number.Float */

.highlight .mh {
    color: #009999
}


/* Literal.Number.Hex */

.highlight .mi {
    color: #009999
}


/* Literal.Number.Integer */

.highlight .mo {
    color: #009999
}


/* Literal.Number.Oct */

.highlight .sb {
    color: #d01040
}


/* Literal.String.Backtick */

.highlight .sc {
    color: #d01040
}


/* Literal.String.Char */

.highlight .sd {
    color: #d01040
}


/* Literal.String.Doc */

.highlight .s2 {
    color: #d01040
}


/* Literal.String.Double */

.highlight .se {
    color: #d01040
}


/* Literal.String.Escape */

.highlight .sh {
    color: #d01040
}


/* Literal.String.Heredoc */

.highlight .si {
    color: #d01040
}


/* Literal.String.Interpol */

.highlight .sx {
    color: #d01040
}


/* Literal.String.Other */

.highlight .sr {
    color: #009926
}


/* Literal.String.Regex */

.highlight .s1 {
    color: #d01040
}


/* Literal.String.Single */

.highlight .ss {
    color: #990073
}


/* Literal.String.Symbol */

.highlight .bp {
    color: #999999
}


/* Name.Builtin.Pseudo */

.highlight .vc {
    color: #008080
}


/* Name.Variable.Class */

.highlight .vg {
    color: #008080
}


/* Name.Variable.Global */

.highlight .vi {
    color: #008080
}


/* Name.Variable.Instance */

.highlight .il {
    color: #009999
}

/**
 * Toggle Switch Globals
 *
 * All switches should take on the class `c-hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.c-hamburger {
  display: block;
  position: relative;
  overflow: hidden;
  margin: 0;
  padding: 0;
  width: $button-width;
  height: $button-height;
  font-size: 0;
  text-indent: -9999px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: none;
  border-radius: none;
  border: none;
  cursor: pointer;
  transition: background $button-transistion-duration;
}

.c-hamburger:focus {
  outline: none;
}

.c-hamburger span {
  display: block;
  position: absolute;
  top: ($button-height / 2) - ($bar-thickness / 2);
  left: $button-pad;
  right: $button-pad;
  height: $bar-thickness;
  background: rgb(255,255,255);
}

.c-hamburger span::before,
.c-hamburger span::after {
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: $bar-thickness;
  background-color: #fff;
  content: "";
}

.c-hamburger span::before {
  top: -$bar-thickness - $button-bar-space;
}

.c-hamburger span::after {
  bottom: -$bar-thickness - $button-bar-space;
}

/**
 * Style 1
 *
 * Rotating hamburger icon (rot), that simply rotates 90 degrees when activated.
 * Nothing too fancy, simple transition.
 */

.c-hamburger--rot {
  background-color: rgb(40,170,220);
}

.c-hamburger--rot span {
  transition: transform $button-transistion-duration;
}

/* active state, i.e. menu open */

.c-hamburger--rot.is-active { 
  background-color: darken(rgb(40,170,220), 20%);
}

.c-hamburger--rot.is-active span {
  transform: rotate(90deg);
}

/**
 * Style 2
 * 
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */

.c-hamburger--htx {
  background-color: $hamburgerColor;
}

.c-hamburger--htx span {
  background-color: $hamburgerBarColor;
  transition: background $button-transistion-duration;
}

.c-hamburger--htx span::before,
.c-hamburger--htx span::after {
  background-color: $hamburgerBarColor;
  transition-duration: $button-transistion-duration, $button-transistion-duration;
  transition-delay: 0s;
}

.c-hamburger--htx span::before {
  transition-property: top, transform;
}

.c-hamburger--htx span::after {
  transition-property: bottom, transform;
}

/* active state, i.e. menu open */

.c-hamburger--htx.is-active {
  background-color: darken($hamburgerColor, 20%);
}

.c-hamburger--htx.is-active span {
  background: none;
}

.c-hamburger--htx.is-active span::before {
  top: 0;
  transform: rotate(45deg);
}

.c-hamburger--htx.is-active span::after {
  bottom: 0;
  transform: rotate(-45deg);
}

.c-hamburger--htx.is-active span::before,
.c-hamburger--htx.is-active span::after {
  transition-delay: 0s;
}

/**
 * Style 3
 *
 * Hamburger to left-arrow (htla). Hamburger menu transforms to a left-pointing
 * arrow. Usually indicates an off canvas menu sliding in from left that
 * will be close on re-click of the icon.
 */

.c-hamburger--htla {
  background-color: rgb(50,220,100);
}

.c-hamburger--htla span {
  transition: transform $button-transistion-duration;
}

.c-hamburger--htla span::before,
.c-hamburger--htla span::after {
  
}

.c-hamburger--htla span::before {
  transform-origin: top right;
  transition: transform $button-transistion-duration, width $button-transistion-duration, top $button-transistion-duration;
}

.c-hamburger--htla span::after {
  transform-origin: bottom right;
  transition: transform $button-transistion-duration, width $button-transistion-duration, bottom $button-transistion-duration;
}

/* active state, i.e. menu open */

.c-hamburger--htla.is-active {
  background-color: darken(rgb(50,220,100), 20%);
}

.c-hamburger--htla.is-active span {
  transform: rotate(180deg);
}

.c-hamburger--htla.is-active span::before,
.c-hamburger--htla.is-active span::after {
  width: 50%;
}

.c-hamburger--htla.is-active span::before {
  top: 0;
  transform: translateX($button-width/2 - $button-pad + $bar-thickness) translateY($bar-thickness/2) rotate(45deg);
}

.c-hamburger--htla.is-active span::after {
  bottom: 0;
  transform: translateX($button-width/2 - $button-pad + $bar-thickness) translateY(-$bar-thickness/2) rotate(-45deg);
}

/**
 * Style 4
 *
 * Hamburger to right-arrow (htra). Hamburger menu transforms to a
 * right-pointing arrow. Usually indicates an off canvas menu sliding in from 
 * right that will be close on re-click of the icon.
 */

.c-hamburger--htra {
  background-color: rgb(255,150,80);
}

.c-hamburger--htra span {
  transition: transform $button-transistion-duration;
}

.c-hamburger--htra span::before,
.c-hamburger--htra span::after {
  
}

.c-hamburger--htra span::before {
  transform-origin: top left;
  transition: transform $button-transistion-duration, width $button-transistion-duration, top $button-transistion-duration;
}

.c-hamburger--htra span::after {
  transform-origin: bottom left;
  transition: transform $button-transistion-duration, width $button-transistion-duration, bottom $button-transistion-duration;
}

/* active state, i.e. menu open */

.c-hamburger--htra.is-active {
  background-color: darken(rgb(255,150,80), 20%);
}

.c-hamburger--htra.is-active span {
  transform: rotate(180deg);
}

.c-hamburger--htra.is-active span::before,
.c-hamburger--htra.is-active span::after {
  width: 50%;
}

.c-hamburger--htra.is-active span::before {
  top: 0;
  transform: translateX(-$bar-thickness) translateY($bar-thickness/2) rotate(-45deg);
}

.c-hamburger--htra.is-active span::after {
  bottom: 0;
  transform: translateX(-$bar-thickness) translateY(-$bar-thickness/2) rotate(45deg);
}